[{"/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/index.tsx":"1","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/serviceWorkerRegistration.ts":"2","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/reportWebVitals.ts":"3","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/App.tsx":"4","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/components/Menu.tsx":"5","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/customer/CustomerEdit.tsx":"6","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/employee/EmployeeList.tsx":"7","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/employee/EmployeeEdit.tsx":"8","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/customer/CustomerList.tsx":"9","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/supplier/SupplierEdit.tsx":"10","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/supplier/SupplierList.tsx":"11","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/customer/CustomerApi.ts":"12","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/supplier/SupplierApi.ts":"13","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/employee/EmployeeApi.ts":"14"},{"size":796,"mtime":1639321855000,"results":"15","hashOfConfig":"16"},{"size":5256,"mtime":1639321855000,"results":"17","hashOfConfig":"16"},{"size":425,"mtime":1639321855000,"results":"18","hashOfConfig":"16"},{"size":2280,"mtime":1639321855000,"results":"19","hashOfConfig":"16"},{"size":1717,"mtime":1639321855000,"results":"20","hashOfConfig":"16"},{"size":3757,"mtime":1639321855000,"results":"21","hashOfConfig":"16"},{"size":3147,"mtime":1639321855000,"results":"22","hashOfConfig":"16"},{"size":4162,"mtime":1639321855000,"results":"23","hashOfConfig":"16"},{"size":3138,"mtime":1653351549015,"results":"24","hashOfConfig":"16"},{"size":4130,"mtime":1639321855000,"results":"25","hashOfConfig":"16"},{"size":3125,"mtime":1639321855000,"results":"26","hashOfConfig":"16"},{"size":1054,"mtime":1639321855000,"results":"27","hashOfConfig":"16"},{"size":1054,"mtime":1639321855000,"results":"28","hashOfConfig":"16"},{"size":1054,"mtime":1639321855000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y6a0qs",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/index.tsx",[],"/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/serviceWorkerRegistration.ts",[],"/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/reportWebVitals.ts",[],"/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/App.tsx",[],"/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/components/Menu.tsx",["62"],"import {\n  IonContent,\n  IonIcon,\n  IonImg,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonListHeader,\n  IonMenu,\n  IonMenuToggle\n} from '@ionic/react';\nimport { people, peopleOutline } from 'ionicons/icons';\nimport { useLocation } from 'react-router-dom';\nimport LogoImg from '../images/logo.png';\nimport './Menu.css';\n\n\ninterface AppPage {\n  url: string;\n  iosIcon: string;\n  mdIcon: string;\n  title: string;\n}\n\nconst appPages: AppPage[] = [\n  {\n    title: 'Clientes',\n    url: '/page/customers',\n    iosIcon: peopleOutline,\n    mdIcon: people\n  },\n  {\n    title: 'Empleados',\n    url: '/page/employees',\n    iosIcon: peopleOutline,\n    mdIcon: people\n  },\n  {\n    title: 'Proveedores',\n    url: '/page/suppliers',\n    iosIcon: peopleOutline,\n    mdIcon: people\n  }\n];\n\nconst labels = ['Family', 'Friends', 'Notes', 'Work', 'Travel', 'Reminders'];\n\nconst Menu: React.FC = () => {\n  const location = useLocation();\n\n  return (\n    <IonMenu contentId=\"main\" type=\"overlay\">\n      <IonContent>\n        <IonList id=\"inbox-list\">\n\n\n          <IonListHeader>\n            <IonImg src={LogoImg} />\n\n          </IonListHeader>\n\n          {appPages.map((appPage, index) => {\n            return (\n              <IonMenuToggle key={index} autoHide={false}>\n                <IonItem className={location.pathname === appPage.url ? 'selected' : ''} routerLink={appPage.url} routerDirection=\"none\" lines=\"none\" detail={false}>\n                  <IonIcon slot=\"start\" ios={appPage.iosIcon} md={appPage.mdIcon} />\n                  <IonLabel>{appPage.title}</IonLabel>\n                </IonItem>\n              </IonMenuToggle>\n            );\n          })}\n        </IonList>\n\n      </IonContent>\n    </IonMenu>\n  );\n};\n\nexport default Menu;\n","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/customer/CustomerEdit.tsx",["63"],"import { IonButton, IonButtons, IonCard, IonCol, IonContent, IonHeader, IonIcon, IonInput, IonItem, IonLabel, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar } from '@ionic/react';\nimport { checkmark } from 'ionicons/icons';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useParams, useRouteMatch } from 'react-router';\nimport Customer from './Customer';\nimport { saveCustomer, searchCustomerById } from './CustomerApi';\n\n\nconst CustomerEdit: React.FC = () => {\n  const { name } = useParams<{ name: string; }>();\n\n  const [customer, setCustomer] = useState<Customer>({});\n  const history = useHistory();\n\n  const routeMatch: any = useRouteMatch(\"/page/customer/:id\");\n  const id = routeMatch?.params?.id;\n\n  useEffect(() => {\n    search();\n  }, [history.location.pathname]);\n\n  const search = async () => {\n    if (id === 'new') {\n      setCustomer({});\n    } else {\n      let result = await searchCustomerById(id);\n      setCustomer(result);\n    }\n  }\n\n  const save = async () => {\n    await saveCustomer(customer);\n    history.push('/page/customers');\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>{name}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">{name}</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n\n\n\n\n        <IonContent>\n          <IonCard>\n            <IonTitle>{id === 'new' ? 'Agregar Cliente' : 'Editar Cliente'}</IonTitle>\n\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Nombre</IonLabel>\n                  <IonInput onIonChange={e => customer.firstname = String(e.detail.value)}\n                    value={customer.firstname}> </IonInput>\n                </IonItem>\n              </IonCol>\n\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Apellido</IonLabel>\n                  <IonInput onIonChange={e => customer.lastname = String(e.detail.value)}\n                    value={customer.lastname}> </IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Email</IonLabel>\n                  <IonInput onIonChange={e => customer.email = String(e.detail.value)}\n                    value={customer.email}> </IonInput>\n                </IonItem>\n              </IonCol>\n\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Direcci√≥n</IonLabel>\n                  <IonInput onIonChange={e => customer.address = String(e.detail.value)}\n                    value={customer.address}> </IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Tel√©fono</IonLabel>\n                  <IonInput onIonChange={e => customer.phone = String(e.detail.value)}\n                    value={customer.phone}> </IonInput>\n                </IonItem>\n              </IonCol>\n\n              <IonCol>\n              </IonCol>\n            </IonRow>\n\n\n\n\n\n\n            <IonItem>\n              <IonButton onClick={save} color=\"success\" fill=\"solid\" slot=\"end\" size=\"default\">\n                <IonIcon icon={checkmark} />\n                Guardar\n              </IonButton>\n            </IonItem>\n\n          </IonCard>\n\n\n        </IonContent>\n\n\n\n\n\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default CustomerEdit;\n","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/employee/EmployeeList.tsx",[],"/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/employee/EmployeeEdit.tsx",["64"],"import { IonButton, IonButtons, IonCard, IonCol, IonContent, IonHeader, IonIcon, IonInput, IonItem, IonLabel, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar } from '@ionic/react';\nimport { checkmark } from 'ionicons/icons';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useParams, useRouteMatch } from 'react-router';\nimport Employee from './Employee';\nimport { saveEmployee, searchEmployeeById } from './EmployeeApi';\n\n\nconst EmployeeEdit: React.FC = () => {\n  const { name } = useParams<{ name: string; }>();\n\n  const [employee, setEmployee] = useState<Employee>({});\n  const history = useHistory();\n\n  const routeMatch: any = useRouteMatch(\"/page/employee/:id\");\n  const id = routeMatch?.params?.id;\n\n  useEffect(() => {\n    search();\n  }, [history.location.pathname]);\n\n  const search = async () => {\n    if (id === 'new') {\n      setEmployee({});\n    } else {\n      let result = await searchEmployeeById(id);\n      setEmployee(result);\n    }\n  }\n\n  const save = async () => {\n    await saveEmployee(employee);\n    history.push('/page/employees');\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>{name}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">{name}</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n\n\n\n\n        <IonContent>\n          <IonCard>\n            <IonTitle>{id === 'new' ? 'Agregar Empleado' : 'Editar Empleado'}</IonTitle>\n\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Nombre</IonLabel>\n                  <IonInput onIonChange={e => employee.firstname = String(e.detail.value)}\n                    value={employee.firstname}> </IonInput>\n                </IonItem>\n              </IonCol>\n\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Apellido</IonLabel>\n                  <IonInput onIonChange={e => employee.lastname = String(e.detail.value)}\n                    value={employee.lastname}> </IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Email</IonLabel>\n                  <IonInput onIonChange={e => employee.email = String(e.detail.value)}\n                    value={employee.email}> </IonInput>\n                </IonItem>\n              </IonCol>\n\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Direcci√≥n</IonLabel>\n                  <IonInput onIonChange={e => employee.address = String(e.detail.value)}\n                    value={employee.address}> </IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Tel√©fono</IonLabel>\n                  <IonInput onIonChange={e => employee.phone = String(e.detail.value)}\n                    value={employee.phone}> </IonInput>\n                </IonItem>\n              </IonCol>\n\n              <IonCol>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Salario</IonLabel>\n                  <IonInput onIonChange={e => employee.salary = Number(e.detail.value)}\n                    value={employee.salary}> </IonInput>\n                </IonItem>\n              </IonCol>\n\n              <IonCol>\n              </IonCol>\n            </IonRow>\n\n\n\n\n\n\n            <IonItem>\n              <IonButton onClick={save} color=\"success\" fill=\"solid\" slot=\"end\" size=\"default\">\n                <IonIcon icon={checkmark} />\n                Guardar\n              </IonButton>\n            </IonItem>\n\n          </IonCard>\n\n\n        </IonContent>\n\n\n\n\n\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default EmployeeEdit;\n","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/customer/CustomerList.tsx",[],"/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/supplier/SupplierEdit.tsx",["65"],"import { IonButton, IonButtons, IonCard, IonCol, IonContent, IonHeader, IonIcon, IonInput, IonItem, IonLabel, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar } from '@ionic/react';\nimport { checkmark } from 'ionicons/icons';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useParams, useRouteMatch } from 'react-router';\nimport Supplier from './Supplier';\nimport { saveSupplier, searchSupplierById } from './SupplierApi';\n\n\nconst SupplierEdit: React.FC = () => {\n  const { name } = useParams<{ name: string; }>();\n\n  const [supplier, setSupplier] = useState<Supplier>({});\n  const history = useHistory();\n\n  const routeMatch: any = useRouteMatch(\"/page/supplier/:id\");\n  const id = routeMatch?.params?.id;\n\n  useEffect(() => {\n    search();\n  }, [history.location.pathname]);\n\n  const search = async () => {\n    if (id === 'new') {\n      setSupplier({});\n    } else {\n      let result = await searchSupplierById(id);\n      setSupplier(result);\n    }\n  }\n\n  const save = () => {\n    saveSupplier(supplier);\n    history.push('/page/suppliers');\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>{name}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">{name}</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n\n\n\n\n        <IonContent>\n          <IonCard>\n            <IonTitle>{id === 'new' ? 'Agregar Proveedor' : 'Editar Proveedor'}</IonTitle>\n\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Nombre</IonLabel>\n                  <IonInput onIonChange={e => supplier.name = String(e.detail.value)}\n                    value={supplier.name}> </IonInput>\n                </IonItem>\n              </IonCol>\n\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Contacto</IonLabel>\n                  <IonInput onIonChange={e => supplier.contact = String(e.detail.value)}\n                    value={supplier.contact}> </IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Email</IonLabel>\n                  <IonInput onIonChange={e => supplier.email = String(e.detail.value)}\n                    value={supplier.email}> </IonInput>\n                </IonItem>\n              </IonCol>\n\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Direcci√≥n</IonLabel>\n                  <IonInput onIonChange={e => supplier.address = String(e.detail.value)}\n                    value={supplier.address}> </IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Tel√©fono</IonLabel>\n                  <IonInput onIonChange={e => supplier.phone = String(e.detail.value)}\n                    value={supplier.phone}> </IonInput>\n                </IonItem>\n              </IonCol>\n\n              <IonCol>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">Web</IonLabel>\n                  <IonInput onIonChange={e => supplier.web = String(e.detail.value)}\n                    value={supplier.web}> </IonInput>\n                </IonItem>\n              </IonCol>\n\n              <IonCol>\n              </IonCol>\n            </IonRow>\n\n\n\n\n\n\n            <IonItem>\n              <IonButton onClick={save} color=\"success\" fill=\"solid\" slot=\"end\" size=\"default\">\n                <IonIcon icon={checkmark} />\n                Guardar\n              </IonButton>\n            </IonItem>\n\n          </IonCard>\n\n\n        </IonContent>\n\n\n\n\n\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SupplierEdit;\n","/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/supplier/SupplierList.tsx",[],"/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/customer/CustomerApi.ts",[],"/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/supplier/SupplierApi.ts",[],"/home/aekmot/aprender/apps-fullStack/microservicios-spring/frontend-react/src/pages/employee/EmployeeApi.ts",[],{"ruleId":"66","severity":1,"message":"67","line":46,"column":7,"nodeType":"68","messageId":"69","endLine":46,"endColumn":13},{"ruleId":"70","severity":1,"message":"71","line":20,"column":6,"nodeType":"72","endLine":20,"endColumn":33,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"71","line":20,"column":6,"nodeType":"72","endLine":20,"endColumn":33,"suggestions":"74"},{"ruleId":"70","severity":1,"message":"71","line":20,"column":6,"nodeType":"72","endLine":20,"endColumn":33,"suggestions":"75"},"@typescript-eslint/no-unused-vars","'labels' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","ArrayExpression",["76"],["77"],["78"],{"desc":"79","fix":"80"},{"desc":"79","fix":"81"},{"desc":"79","fix":"82"},"Update the dependencies array to be: [history.location.pathname, search]",{"range":"83","text":"84"},{"range":"85","text":"84"},{"range":"86","text":"84"},[769,796],"[history.location.pathname, search]",[769,796],[769,796]]